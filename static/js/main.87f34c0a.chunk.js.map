{"version":3,"sources":["redux/actions/genres.js","redux/actions/listresult.js","context.js","components/Tasks.js","components/Result.js","components/Options.js","components/Bar.js","pages/Home.js","pages/Itog.js","App.js","reportWebVitals.js","redux/reducers/overallResult.js","redux/reducers/exstendedResult.js","redux/store.js","index.js"],"names":["setGen","list","type","payload","setList","MyContext","React","createContext","Tasks","otvet","useRef","useContext","vopros","answerInput","useState","butact","setButact","stateres","useSelector","ovRes","exRes","overall","exList","useEffect","current","focus","value","placeholder","className","onKeyPress","e","code","setTimeout","before","ref","after","classNames","onClick","to","length","Result","resgen","reslist","Options","changOption","optionCheckbox","id","checked","onChange","htmlFor","Bar","Home","Itog","map","el","index","names","find","item","name","newname","res","App","setOptionCheckbox","tasks","listTasks","setListTasks","randomTask","showTasks","setShowTasks","dispatch","useDispatch","t","Array","isArray","Math","floor","random","console","log","basic","arr","dom","filter","division","st","ar","Provider","window","confirm","v","alert","otv","otwet","newArr","resTaskPlus","newlist","some","resTaskMinus","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","overallResult","state","action","datalist","extendedResult","rootReducer","combineReducers","exstendedResult","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87f34c0a.chunk.js","sourcesContent":["\r\nexport const setGen = (list) => ({\r\n    type: 'GENERAL_LIST_UPDATE',\r\n    payload: list,\r\n})","\r\nexport const setList = (list) => ({\r\n    type: 'LIST_UPDATE',\r\n    payload: list,\r\n})","import React from 'react';\r\n\r\nexport const MyContext = React.createContext();","import React, {useRef, useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { MyContext } from '../context.js'\r\n\r\n\r\nfunction Tasks () {\r\n    let otvet = useRef(); \r\n\r\n    const { vopros, answerInput } = useContext(MyContext);\r\n    \r\n\r\n    const [butact, setButact] = useState(false);\r\n    \r\n    const stateres = useSelector(({ovRes, exRes}) => {\r\n        return {\r\n          ovRes: ovRes.overall,\r\n          exList: exRes.list\r\n        }\r\n    })\r\n\r\n    const pushbut = (e) => {\r\n        if (e.code === 'Enter'){\r\n            setButact(true);\r\n            setTimeout(() => {setButact(false)},200)\r\n            answerInput(otvet.current.value)\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect (()  =>{\r\n        otvet.current.focus();\r\n    }) \r\n    \r\n    useEffect (()  =>{\r\n        otvet.current.value = '';\r\n        otvet.current.placeholder = '**********';\r\n    }) \r\n    \r\n    \r\n    return (\r\n        <div className=\"box__panel\"  onKeyPress={pushbut}>\r\n            <div className=\"box__panel__vopros\">\r\n                <p> {vopros.vopros}</p>\r\n            </div>\r\n            <div className='box__input'>\r\n                <span>{vopros.before}</span><input type=\"text\"  ref={otvet}  /><span>{vopros.after}</span>\r\n            </div>\r\n            <button className={classNames('but', {'push': butact})} onClick={()=>{answerInput(otvet.current.value)}}> Ok </button>\r\n            <Link to={'/result'} className={classNames('link' , {'notactive': (stateres.exList.length === 0) })}> Показат резльтаты </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Result () {\r\n\r\n    const stateres = useSelector(({ovRes, exRes}) => {\r\n        return {\r\n          resgen: ovRes.overall,\r\n          reslist: exRes.list\r\n        }\r\n      })\r\n      \r\n    return (\r\n        <div className=\"box__bar__result\">\r\n            <ul>\r\n                <li>Всего вопросов  <br/><span className=\"green\">{stateres.resgen[0]}</span></li>\r\n                <li>Павильных ответов  <br/><span className=\"blue\">{stateres.resgen[1]}</span> </li>\r\n                <li>Ошибок  <br/><span className=\"red\">{stateres.resgen[2]}</span></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\n\r\nimport { MyContext } from '../context.js'\r\n\r\nfunction Options () {\r\n\r\n    const { changOption, optionCheckbox } = React.useContext(MyContext);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"box__bar__chbox\">\r\n                <ul>\r\n                    <li> <input type=\"checkbox\" id=\"chdom\" checked={optionCheckbox[0]} onChange={()=>changOption(0)}/> <label htmlFor=\"chdom\" > DOM </label></li>\r\n                    <li> <input type=\"checkbox\" id=\"chstr\" checked={optionCheckbox[1]} onChange={()=>changOption(1)}/> <label htmlFor=\"chstr\" > Строки и числа </label> </li>\r\n                    <li> <input type=\"checkbox\" id=\"chmas\" checked={optionCheckbox[2]} onChange={()=>changOption(2)}/> <label htmlFor=\"chmas\" > Массивы </label></li>\r\n                </ul>\r\n            </div>\r\n           \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Options;","import React from 'react';\r\n\r\nimport Result from './Result';\r\nimport Options from './Options';\r\n\r\nfunction Bar () {\r\n   \r\n    return (\r\n        <div className=\"box__bar\">\r\n           <Options />\r\n           <Result />\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Bar;","import React from 'react';\r\n\r\nimport './box.scss';\r\n\r\nimport Tasks from '../components/Tasks';\r\nimport Bar from '../components/Bar';\r\n\r\nfunction Home () {\r\n    return (\r\n        <div className=\"box\">\r\n            <Bar />\r\n            <Tasks/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport {names} from '../bd.json';\r\nimport './itog.scss';\r\n\r\nfunction Itog () {\r\n    \r\n    const stateres = useSelector(({ovRes, exRes}) => {\r\n        return {\r\n          ovRes: ovRes.overall,\r\n          exList: exRes.list\r\n        }\r\n      })\r\n\r\n      \r\n   \r\n    return (\r\n        <div className=\"itog\">\r\n            <Link to={'/'} className=\"back\"> Назад </Link>   \r\n            <div className=\"itog__list\">\r\n                <h2>Ваш результат</h2>\r\n                <ul>\r\n                    <li>\r\n                        <h3>Bce</h3>\r\n                        <p>Вопросов - <span className=\"colnum\">{stateres.ovRes[0]}</span></p>\r\n                        <p>Правильно - <span className=\"colok\">{stateres.ovRes[1]}</span></p>\r\n                        <p>Не правильно - <span className=\"coler\">{stateres.ovRes[2]}</span></p>\r\n                    </li> \r\n                    {stateres.exList.map((el,index) => (\r\n                        <li key={index}>\r\n                            <h3>{names.find((item)=> item.name === el.name).newname}</h3>\r\n                            <p>Вопросов - <span className=\"colnum\">{el.res[0]}</span></p>\r\n                            <p>Правильно - <span className=\"colok\">{el.res[1]}</span></p>\r\n                            <p>Не правильно - <span className=\"coler\">{el.res[2]}</span></p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                  \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Itog;","import React, {useState, useEffect} from 'react';\nimport {Switch, Route } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGen } from './redux/actions/genres'; \nimport { setList } from './redux/actions/listresult'; \n\nimport { MyContext } from './context.js';\n\nimport Home from './pages/Home';\nimport Itog from './pages/Itog';\n\nimport './App.css';\nimport './style.scss';\n\nimport { tasks } from './bd.json';\n\n\nfunction App() {\n  \n  const [optionCheckbox, setOptionCheckbox] = useState([true,true,true]);\n  const [listTasks, setListTasks] = useState(tasks);\n  const [showTasks, setShowTasks] = useState(randomTask(listTasks));\n  \n  const dispatch = useDispatch();\n  \n  const stateres = useSelector(({ ovRes, exRes }) => {\n    return {\n      ovRes: ovRes.overall,\n      exList: exRes.list,\n    }\n  })\n  \n  console.log(stateres.basic)\n\n  useEffect (()  => {\n    let arr = [];\n    if (optionCheckbox[0]) {\n      let dom = tasks.filter(el => el.division === \"dom\");\n      arr = [...arr, ...dom];\n    }\n    if (optionCheckbox[1]) {\n      let st = tasks.filter(el => el.division === \"strnum\");\n      arr = [...arr, ...st];\n    }\n    if (optionCheckbox[2]) {\n      let ar = tasks.filter(el => el.division === \"mas\");\n      arr = [...arr, ...ar];\n    }\n    \n    setListTasks(arr);\n    setShowTasks(randomTask(listTasks));\n  },[optionCheckbox]);\n \n  \n  const options = (e) => {\n    if (window.confirm(\"При изменении этих параметров вам придется начать сначало!\")) {\n      let v = optionCheckbox;\n      v[e] = !v[e];\n      if (!v[0] && !v[1] && !v[2]){\n        alert('Нельзя убрать все варианты!')\n        setOptionCheckbox([true,true,true]);\n        dispatch(setGen([0,0,0]));\n        dispatch(setList([]));\n\n      }\n      else {\n        setOptionCheckbox([...v]);\n        dispatch(setGen([0,0,0]));\n        dispatch(setList([]));\n      }      \n    }\n    else return\n  }  \n  \n  \n  function randomTask (t) {\n    if (Array.isArray(t)){\n      let rand = Math.floor(Math.random() * t.length);\n      return t[rand];\n    }\n    else return ;\n  }\n\n  \n  const clickform = (otv) => {\n    if (otv === showTasks.otwet){\n      let newArr = listTasks.filter(item => item.id !== showTasks.id)\n      setListTasks(newArr);\n      setShowTasks(randomTask(listTasks));\n      let resTaskPlus = stateres.ovRes;\n      resTaskPlus[0]++;\n      resTaskPlus[1]++;\n      dispatch(setGen(resTaskPlus));\n      \n      let newlist = stateres.exList;\n      if(!newlist.some((item) => item.name === showTasks.division)){\n        newlist = [...newlist,{ name:showTasks.division, res:[1,1,0] }]\n        dispatch(setList(newlist));\n      } \n      else {\n        newlist.find((item) => item.name === showTasks.division).res[0]++;\n        newlist.find((item) => item.name === showTasks.division).res[1]++;\n        dispatch(setList(newlist));\n      }\n      \n    }\n    else {\n      setShowTasks(randomTask(listTasks));\n      let resTaskMinus = stateres.ovRes;\n      resTaskMinus[0]++;\n      resTaskMinus[2]++;\n      dispatch(setGen(resTaskMinus))\n\n      let newlist = stateres.exList;\n      if(!newlist.some((item) => item.name === showTasks.division)){\n        newlist = [...newlist,{name:showTasks.division,res:[1,1,0]}]\n        dispatch(setList(newlist));\n      } \n      else {\n        newlist.find((item) => item.name === showTasks.division).res[0]++;\n        newlist.find((item) => item.name === showTasks.division).res[1]++;\n        dispatch(setList(newlist));\n      }\n    }\n  }\n  \n\n  \n  return (\n      <MyContext.Provider value={{ vopros:showTasks, changOption:options, optionCheckbox, answerInput:clickform}}>\n        <div className =\"contain\">\n          <Switch>\n            <Route exact path=\"/\" render={() => <Home/>} />\n            <Route exact path=\"/result\" render={() => <Itog/>} />\n          </Switch>\n          \n        </div>\n      </MyContext.Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let data = {\r\n  overall: [0,0,0]\r\n}\r\n\r\n\r\nconst overallResult = (state = data, action) => {\r\n    switch (action.type) {\r\n        case 'GENERAL_LIST_UPDATE':\r\n          return {...state, overall: action.payload}\r\n        \r\n        default:\r\n          return state\r\n      }\r\n}\r\n\r\nexport default overallResult;","let datalist = {\r\n  list: []\r\n}\r\n\r\nconst extendedResult = (state = datalist, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_UPDATE':\r\n          return {...state, list: action.payload}\r\n        \r\n        default:\r\n          return state\r\n      }\r\n}\r\n\r\nexport default extendedResult;","import { createStore, combineReducers } from 'redux'\r\n\r\nimport overallResult from './reducers/overallResult'\r\nimport exstendedResult from './reducers/exstendedResult'\r\n\r\nconst rootReducer = combineReducers({\r\n  ovRes: overallResult,\r\n  exRes: exstendedResult,\r\n})\r\n\r\nlet store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nwindow.st = store;\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router} from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/store'\n\n\n\n\nReactDOM.render(\n\n  \n    <React.StrictMode>\n      <Router>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </Router>\n    </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}